{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le-Yo\\\\Documents\\\\My code\\\\2.PROJECTS\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\NewExpense.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import './NewExpense.css';\n// import ExpenseForm from \"./ExpenseForm\";\n// import { useState } from 'react';\n\n// const NewExpense = (props) =>{\n\n// const [isEditing, setIsEditing]=useState(false);\n\n// const saveExpenseDataHandler = (enteredExpenseData) =>{\n//       const expenseData = {\n//         ...enteredExpenseData,\n//         id: Math.random().toString()\n//       };\n//       props.onAddExpense(expenseData);\n//       setIsEditing(false);\n//  };\n\n//  const startEditingHandler = () => {\n//      setIsEditing(true);\n// }\n// const stopEditingHandler = (props) => {\n//      setIsEditing(false);\n// }\n//     return (\n//         <div className=\"new-expense\">\n//           {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n\n//           {isEditing &&\n//            <ExpenseForm \n//            onSaveExpenseData ={saveExpenseDataHandler}\n//            onCancel={stopEditingHandler}\n//            />}\n\n//     </div>\n//     );\n\n// };\n\n// export default NewExpense;\n\nimport React, { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExpense = props => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = async enteredExpenseData => {\n    try {\n      const response = await fetch('http://localhost:3001/account', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(enteredExpenseData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        console.log('Expense saved to the database');\n        // Update the state with the new expense\n        props.onAddExpense(enteredExpenseData);\n        setIsEditing(false);\n      } else {\n        console.error('Error saving data:', result.message);\n      }\n    } catch (error) {\n      console.error('Error creating data:', error.message);\n    }\n  };\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n_c = NewExpense;\nexport default NewExpense;\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["React","useState","ExpenseForm","jsxDEV","_jsxDEV","NewExpense","props","_s","isEditing","setIsEditing","saveExpenseDataHandler","enteredExpenseData","response","fetch","method","headers","body","JSON","stringify","result","json","ok","console","log","onAddExpense","error","message","startEditingHandler","stopEditingHandler","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSaveExpenseData","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Le-Yo/Documents/My code/2.PROJECTS/01-starting-setup/src/components/NewExpense/NewExpense.js"],"sourcesContent":["// import React from \"react\";\r\n// import './NewExpense.css';\r\n// import ExpenseForm from \"./ExpenseForm\";\r\n// import { useState } from 'react';\r\n\r\n\r\n// const NewExpense = (props) =>{\r\n\r\n// const [isEditing, setIsEditing]=useState(false);\r\n\r\n\r\n// const saveExpenseDataHandler = (enteredExpenseData) =>{\r\n//       const expenseData = {\r\n//         ...enteredExpenseData,\r\n//         id: Math.random().toString()\r\n//       };\r\n//       props.onAddExpense(expenseData);\r\n//       setIsEditing(false);\r\n//  };\r\n\r\n//  const startEditingHandler = () => {\r\n//      setIsEditing(true);\r\n// }\r\n// const stopEditingHandler = (props) => {\r\n//      setIsEditing(false);\r\n// }\r\n//     return (\r\n//         <div className=\"new-expense\">\r\n//           {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n         \r\n//           {isEditing &&\r\n//            <ExpenseForm \r\n//            onSaveExpenseData ={saveExpenseDataHandler}\r\n//            onCancel={stopEditingHandler}\r\n//            />}\r\n           \r\n//     </div>\r\n//     );\r\n    \r\n// };\r\n\r\n\r\n\r\n// export default NewExpense;\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = async (enteredExpenseData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/account', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(enteredExpenseData),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Expense saved to the database');\r\n        // Update the state with the new expense\r\n        props.onAddExpense(enteredExpenseData);\r\n        setIsEditing(false);\r\n      } else {\r\n        console.error('Error saving data:', result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating data:', error.message);\r\n    }\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAGA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAIA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,sBAAsB,GAAG,MAAOC,kBAAkB,IAAK;IAC3D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,kBAAkB;MACzC,CAAC,CAAC;MAEF,MAAMQ,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAEpC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACfC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5C;QACAjB,KAAK,CAACkB,YAAY,CAACb,kBAAkB,CAAC;QACtCF,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,MAAM;QACLa,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEN,MAAM,CAACO,OAAO,CAAC;MACrD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACtD;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChClB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMmB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEL,OAAA;IAAAyB,QAAA,GACG,CAACrB,SAAS,iBACTJ,OAAA;MAAQ0B,OAAO,EAAEH,mBAAoB;MAAAE,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC9D,EAEA1B,SAAS,iBACRJ,OAAA,CAACF,WAAW;MACViC,iBAAiB,EAAEzB,sBAAuB;MAC1C0B,QAAQ,EAAER;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlDIF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAoDhB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}