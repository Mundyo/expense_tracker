{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le-Yo\\\\Documents\\\\My code\\\\2.PROJECTS\\\\01-starting-setup\\\\src\\\\components\\\\login\\\\signup.jsx\",\n  _s = $RefreshSig$();\n// import './LoginForm.css';\n// import React, { useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// function Card({ children }) {\n//   return <div className=\"card-container\">{children}</div>;\n// }\n\n// function SignUp() {\n//   const [formData, setFormData] = useState({ username: '', password: '', confirmPassword: '' });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch('http://localhost:3001/signup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(formData),\n//       });\n\n//       const result = await response.json();\n\n//       if (response.ok) {\n//         console.log('Account created successfully!');\n//       } else {\n//         console.error('Error creating account:', result.message);\n//       }\n//     } catch (error) {\n//       console.error('Error creating account:', error.message);\n//     }\n//   };\n\n//   // const handleLogin = ()=>{\n//   //   window.location.href ='/';\n//   // }\n\n//   return (\n//     <div className=\"center-container mt-5\">\n//       <Card>\n//         <h2 className=\"text-center mb-41\"> Expense Tracker</h2>    \n//         <h2 className=\"text-center mb-4\">Sign Up</h2>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"username\" className=\"form-label\">Username:</label>\n//             <input\n//               type=\"text\"\n//               className=\"form-controll\"\n//               id=\"username\"\n//               name=\"username\"\n//               value={formData.username}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"password\" className=\"form-label\">Password:</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-controll\"\n//               id=\"password\"\n//               name=\"password\"\n//               value={formData.password}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"mb-3\">\n//             <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm Password:</label>\n//             <input\n//               type=\"password\"\n//               className=\"form-controll\"\n//               id=\"confirmPassword\"\n//               name=\"confirmPassword\"\n//               value={formData.confirmPassword}\n//               onChange={handleInputChange}\n//               required\n//             />\n//           </div>\n//           <Link to = '/'>\n//           <button type=\"submit\" className=\"btn btn-primary btn-block\" >Sign Up</button>\n//           </Link>\n//         </form>\n\n//         <p className=\"mt-3 text-center\">Already have an account? <a href=\"/\">Login</a></p>\n//       </Card>\n//     </div>\n//   );\n// }\n\n// export default SignUp;\n\nimport './LoginForm.css';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card({\n  children\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 10\n  }, this);\n}\n_c = Card;\nfunction SignUp() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const navigate = useNavigate(); // Correct hook for programmatic navigation\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/signup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        console.log('Account created successfully!');\n        navigate('/'); // Redirect using navigate\n      } else {\n        console.error('Error creating account:', result.message);\n      }\n    } catch (error) {\n      console.error('Error creating account:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-41\",\n        children: \" Expense Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-4\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-controll\",\n            id: \"username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"form-label\",\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-controll\",\n            id: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmPassword\",\n            className: \"form-label\",\n            children: \"Confirm Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-controll\",\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            value: formData.confirmPassword,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3 text-center\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"up3j1E7em0pkXiLeo8RNU4+oJbk=\", false, function () {\n  return [useNavigate];\n});\n_c2 = SignUp;\nexport default SignUp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Card","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","SignUp","_s","formData","setFormData","username","password","confirmPassword","navigate","handleInputChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","ok","console","log","error","message","onSubmit","htmlFor","type","id","onChange","required","href","_c2","$RefreshReg$"],"sources":["C:/Users/Le-Yo/Documents/My code/2.PROJECTS/01-starting-setup/src/components/login/signup.jsx"],"sourcesContent":["\r\n// import './LoginForm.css';\r\n// import React, { useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n// function Card({ children }) {\r\n//   return <div className=\"card-container\">{children}</div>;\r\n// }\r\n\r\n\r\n// function SignUp() {\r\n//   const [formData, setFormData] = useState({ username: '', password: '', confirmPassword: '' });\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await fetch('http://localhost:3001/signup', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(formData),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         console.log('Account created successfully!');\r\n//       } else {\r\n//         console.error('Error creating account:', result.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error creating account:', error.message);\r\n//     }\r\n//   };\r\n\r\n//   // const handleLogin = ()=>{\r\n//   //   window.location.href ='/';\r\n//   // }\r\n\r\n//   return (\r\n//     <div className=\"center-container mt-5\">\r\n//       <Card>\r\n//         <h2 className=\"text-center mb-41\"> Expense Tracker</h2>    \r\n//         <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <div className=\"mb-3\">\r\n//             <label htmlFor=\"username\" className=\"form-label\">Username:</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               className=\"form-controll\"\r\n//               id=\"username\"\r\n//               name=\"username\"\r\n//               value={formData.username}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"mb-3\">\r\n//             <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"form-controll\"\r\n//               id=\"password\"\r\n//               name=\"password\"\r\n//               value={formData.password}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n\r\n//           <div className=\"mb-3\">\r\n//             <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm Password:</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               className=\"form-controll\"\r\n//               id=\"confirmPassword\"\r\n//               name=\"confirmPassword\"\r\n//               value={formData.confirmPassword}\r\n//               onChange={handleInputChange}\r\n//               required\r\n//             />\r\n//           </div>\r\n//           <Link to = '/'>\r\n//           <button type=\"submit\" className=\"btn btn-primary btn-block\" >Sign Up</button>\r\n//           </Link>\r\n//         </form>\r\n\r\n//         <p className=\"mt-3 text-center\">Already have an account? <a href=\"/\">Login</a></p>\r\n//       </Card>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SignUp;\r\n\r\nimport './LoginForm.css';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Card({ children }) {\r\n  return <div className=\"card-container\">{children}</div>;\r\n}\r\n\r\nfunction SignUp() {\r\n  const [formData, setFormData] = useState({ username: '', password: '', confirmPassword: '' });\r\n  const navigate = useNavigate(); // Correct hook for programmatic navigation\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:3001/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        console.log('Account created successfully!');\r\n        navigate('/'); // Redirect using navigate\r\n      } else {\r\n        console.error('Error creating account:', result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating account:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"center-container mt-5\">\r\n      <Card>\r\n        <h2 className=\"text-center mb-41\"> Expense Tracker</h2>    \r\n        <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"username\" className=\"form-label\">Username:</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-controll\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              value={formData.username}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"password\" className=\"form-label\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-controll\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"confirmPassword\" className=\"form-label\">Confirm Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-controll\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              value={formData.confirmPassword}\r\n              onChange={handleInputChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary btn-block\" >Sign Up</button>\r\n        </form>\r\n\r\n        <p className=\"mt-3 text-center\">Already have an account? <a href=\"/\">Login</a></p>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}