{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Le-Yo\\\\Documents\\\\My code\\\\2.PROJECTS\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\NewExpense.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './NewExpense.css';\nimport ExpenseForm from \"./ExpenseForm\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExpense = props => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const updatedExpenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(updatedExpenseData);\n    setIsEditing(false);\n  };\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n  const stopEditingHandler = props => {\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 26\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancel: stopEditingHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n_c = NewExpense;\nexport default NewExpense;\n\n// import React, { useState } from 'react';\n// import ExpenseForm from './ExpenseForm';\n\n// const NewExpense = (props) => {\n//   const [isEditing, setIsEditing] = useState(false);\n\n//   const saveExpenseDataHandler = async (enteredExpenseData) => {\n//     try {\n//       const response = await fetch('http://localhost:3001/account', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(enteredExpenseData),\n//       });\n\n//       const result = await response.json();\n\n//       if (response.ok) {\n//         console.log('Expense saved to the database');\n//         // Update the state with the new expense\n//         props.onAddExpense(enteredExpenseData);\n//         setIsEditing(false);\n//       } else {\n//         console.error('Error saving data:', result.message);\n//       }\n//     } catch (error) {\n//       console.error('Error creating data:', error.message);\n//     }\n//   };\n\n//   const startEditingHandler = () => {\n//     setIsEditing(true);\n//   };\n\n//   const stopEditingHandler = () => {\n//     setIsEditing(false);\n//   };\n\n//   return (\n//     <div>\n//       {!isEditing && (\n//         <button onClick={startEditingHandler}>Add New Expense</button>\n//       )}\n\n//       {isEditing && (\n//         <ExpenseForm\n//           onSaveExpenseData={saveExpenseDataHandler}\n//           onCancel={stopEditingHandler}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default NewExpense;\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["React","ExpenseForm","useState","jsxDEV","_jsxDEV","NewExpense","props","_s","isEditing","setIsEditing","saveExpenseDataHandler","enteredExpenseData","updatedExpenseData","id","Math","random","toString","onAddExpense","startEditingHandler","stopEditingHandler","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSaveExpenseData","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/Le-Yo/Documents/My code/2.PROJECTS/01-starting-setup/src/components/NewExpense/NewExpense.js"],"sourcesContent":["import React from \"react\";\r\nimport './NewExpense.css';\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport { useState } from 'react';\r\n\r\n\r\nconst NewExpense = (props) =>{\r\n\r\nconst [isEditing, setIsEditing]=useState(false);\r\n\r\n\r\nconst saveExpenseDataHandler = (enteredExpenseData) =>{\r\n      const updatedExpenseData = {\r\n        ...enteredExpenseData,\r\n        id: Math.random().toString()\r\n      };\r\n      props.onAddExpense(updatedExpenseData);\r\n      setIsEditing(false);\r\n };\r\n\r\n const startEditingHandler = () => {\r\n     setIsEditing(true);\r\n}\r\nconst stopEditingHandler = (props) => {\r\n     setIsEditing(false);\r\n}\r\n    return (\r\n        <div className=\"new-expense\">\r\n          {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n         \r\n          {isEditing &&\r\n           <ExpenseForm \r\n           onSaveExpenseData ={saveExpenseDataHandler}\r\n           onCancel={stopEditingHandler}\r\n           />}\r\n           \r\n    </div>\r\n    );\r\n    \r\n};\r\n\r\n\r\n\r\nexport default NewExpense;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import ExpenseForm from './ExpenseForm';\r\n\r\n// const NewExpense = (props) => {\r\n//   const [isEditing, setIsEditing] = useState(false);\r\n\r\n//   const saveExpenseDataHandler = async (enteredExpenseData) => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:3001/account', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify(enteredExpenseData),\r\n//       });\r\n\r\n//       const result = await response.json();\r\n\r\n//       if (response.ok) {\r\n//         console.log('Expense saved to the database');\r\n//         // Update the state with the new expense\r\n//         props.onAddExpense(enteredExpenseData);\r\n//         setIsEditing(false);\r\n//       } else {\r\n//         console.error('Error saving data:', result.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error creating data:', error.message);\r\n//     }\r\n//   };\r\n\r\n//   const startEditingHandler = () => {\r\n//     setIsEditing(true);\r\n//   };\r\n\r\n//   const stopEditingHandler = () => {\r\n//     setIsEditing(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       {!isEditing && (\r\n//         <button onClick={startEditingHandler}>Add New Expense</button>\r\n//       )}\r\n\r\n//       {isEditing && (\r\n//         <ExpenseForm\r\n//           onSaveExpenseData={saveExpenseDataHandler}\r\n//           onCancel={stopEditingHandler}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewExpense;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,UAAU,GAAIC,KAAK,IAAI;EAAAC,EAAA;EAE7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAACP,QAAQ,CAAC,KAAK,CAAC;EAG/C,MAAMQ,sBAAsB,GAAIC,kBAAkB,IAAI;IAChD,MAAMC,kBAAkB,GAAG;MACzB,GAAGD,kBAAkB;MACrBE,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;IAC7B,CAAC;IACDV,KAAK,CAACW,YAAY,CAACL,kBAAkB,CAAC;IACtCH,YAAY,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAC9BT,YAAY,CAAC,IAAI,CAAC;EACvB,CAAC;EACD,MAAMU,kBAAkB,GAAIb,KAAK,IAAK;IACjCG,YAAY,CAAC,KAAK,CAAC;EACxB,CAAC;EACG,oBACIL,OAAA;IAAKgB,SAAS,EAAC,aAAa;IAAAC,QAAA,GACzB,CAACb,SAAS,iBAAIJ,OAAA;MAAQkB,OAAO,EAAEJ,mBAAoB;MAAAG,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE5ElB,SAAS,iBACTJ,OAAA,CAACH,WAAW;MACZ0B,iBAAiB,EAAGjB,sBAAuB;MAC3CkB,QAAQ,EAAET;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAGV,CAAC;AAACnB,EAAA,CAjCIF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAqChB,eAAeA,UAAU;;AAGzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}